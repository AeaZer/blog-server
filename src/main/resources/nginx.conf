#user  nobody;
worker_processes  2;
#error_log  logs/error.log;
#pid  logs/nginx.pid;

#最大文件打开数（连接），可设置为系统优化后的ulimit -HSn的结果
worker_rlimit_nofile 360000;

events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    use epoll;
    #单个后台worker process进程的最大并发链接数
    worker_connections 100000;
    #是否串行处理连接
    multi_accept off;
}

http {
    #文件扩展名与类型映射表
    include    mime.types;
    #默认文件类型
    default_type  application/octet-stream;
    #设定请求缓存 
    #户端请求的最大可接受体大小，由行表示
    client_max_body_size 50m;
    #服务器名字的hash表大小
    server_names_hash_bucket_size 256;
    #客户机的请求头设置大小,对于绝大多数请求，1K的缓冲区大小就足够了
    client_header_buffer_size 256k;
    #用来指定客户端请求中较大的消息头的缓存最大数量和大小
    large_client_header_buffers 4 256k;
    
    #用于配置转发至tomcat后；tomcat获取客户端正式ip
    #允许重新定义和添加一些将被传输到代理服务器的请求头行。作为值，可以使用文本、变量及其组合。
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Port $remote_port;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    #解决js跨域的问题
    #增加头标
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    
    #指定客户机请求体缓冲区大小。
    client_body_buffer_size 256k;
    #客户机的请求头设置读取超时。
    client_header_timeout 3m;
    #客户机的请求体设置读取超时。
    client_body_timeout 3m;
    #客户端分配响应超时时间。
    send_timeout 3m;
    #访问日志存放路径
    access_log   no;
    #客户端连接保持活动的超时时间，在超过这个时间之后服务器会关闭该链接。
    keepalive_timeout  0;
    #修改或隐藏Nginx的版本号
    server_tokens off;


    #虚拟主机配置
    server {
    #listen指令指定所包含的服务器接受的地址和端口。可以只指定地址、端口或服务器名作为地址      
    listen       80;
    #e用来指定ip地址或者域名，多个域名之间用空格分开
    server_name  localhost;
    #对 "/gzh" 启用反向代理
    # location /gzh
    # {
    #     #根据表达式来更改URI，或者修改字符串。注意重写表达式只对相对路径有效。
    #     #此处是将/gzh以前的地址替换成http://weixin.qq.com/q/xxx
    #     rewrite ^ http://weixin.qq.com/q/xxx;
    # }
    
    # location /admin {
    #     root   /usr/share/nginx/dist/;
    #     index  index.html index.htm;
    # }
                                                                                                        
    location /peng {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;

            # proxy_set_header Host $proxy_host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header Via "nginx";
    }   

    #跳转到/peng
    location / {
            proxy_pass http://127.0.0.1:8080/peng/;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}


#后台管理
server
{
    listen 8088;
    server_name localhost;
    #default_type 'text/html';
    charset utf-8;
  
     location / {
        root   /usr/share/nginx/dist/;
        index  index.html index.htm;
    }

     #后台访问接口代理
     location /peng {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;

            # proxy_set_header Host $proxy_host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header Via "nginx";
    }   
}


# server
# {
#     listen 8088;
#     server_name localhost;
#     #default_type 'text/html';
#     charset utf-8;
#     # 日志级别
#     #error_log  logs/error.log info;    
#      location / {
#         root   /usr/share/nginx/dist/;
#         index  index.html index.htm;
#     }
# }

# server
# {
#     listen 8080;
#     server_name localhost;
#     #default_type 'text/html';
#     charset utf-8;
#     # 日志级别
#     #error_log  logs/error.log info;    
#     location /test {
#         default_type text/html;
#         return 200 "207_8081";
#     }
#     location /peng {
#             proxy_pass http://127.0.0.1:8080;
#             proxy_set_header Host $proxy_host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header Via "nginx";
#     }   
#     location / {
#         root   html;
#         index  index.html index.htm;
#     }
# }

}